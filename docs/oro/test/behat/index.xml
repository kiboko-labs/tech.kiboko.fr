<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tests Behat on Tech.Kiboko.fr</title>
    <link>http://tech.kiboko.fr/oro/test/behat/</link>
    <description>Recent content in Tests Behat on Tech.Kiboko.fr</description>
    <generator>Hugo</generator>
    <language>fr-fr</language>
    <lastBuildDate>Tue, 01 Dec 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://tech.kiboko.fr/oro/test/behat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Autoloading</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-autoloading/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-autoloading/</guid>
      <description>&lt;p&gt;Lors de l&amp;rsquo;initialisation, l&amp;rsquo;extension crée une suite de tests avec un nom de bundle si un répertoire &lt;code&gt;Tests/Behat/Features&lt;/code&gt;&#xA;existe dans un bundle. Ainsi, si le bundle n&amp;rsquo;a pas de répertoire Features - aucune suite de tests ne sera créée ce bundle.&lt;/p&gt;&#xA;&lt;p&gt;Si vous avez besoin de certaines étapes de fonctionnalité spécifiques pour votre bundle, créez la classe &lt;code&gt;AcmeDemoBundle\Tests\Behat\Context\FeatureContext&lt;/code&gt;.&#xA;Ce contexte est ajouté à la suite avec les contextes courants.La liste complète du contexte commun est configurée dans le fichier de configuration behat sous la clé &lt;code&gt;shared_contexts&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuration</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-configuration/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-configuration/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Préparation de l&amp;rsquo;environnement&lt;/strong&gt; :&lt;/p&gt;&#xA;&lt;p&gt;Utilisez la configuration par défaut de l&amp;rsquo;application installée en mode production.&#xA;Si aucun serveur de messagerie n&amp;rsquo;est configuré localement, définissez le paramètre mailer_transport dans parameters.yml sur null.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Configuration de Behat&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;La configuration de base se trouve dans behat.yml.dist. Chaque application possède son propre fichier behat.yml.dist à la racine du répertoire de l&amp;rsquo;application.&#xA;Créez votre behat.yml (il est ignoré par git automatiquement et n&amp;rsquo;est jamais validé dans le référentiel distant), importez la configuration de base et modifiez-la pour l&amp;rsquo;adapter à votre environnement:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conventions</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-conventions/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-conventions/</guid>
      <description>&lt;h2 id=&#34;conventions&#34;&gt;Conventions&lt;/h2&gt;&#xA;&lt;p&gt;Utilisez le mapping de formulaire au lieu de sélecteurs dans vos scénarios pour les garder clairs et compréhensibles pour les personnes du monde technique et non technique.&lt;/p&gt;&#xA;&lt;h3 id=&#34;exemples&#34;&gt;Exemples&lt;/h3&gt;&#xA;&lt;p&gt;Ne pas utiliser des selecteurs CSS dans le test:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;I fill in &amp;#34;oro_workflow_definition_form[label]&amp;#34; with &amp;#34;User Workflow Test&amp;#34;&#xA;I fill in &amp;#34;oro_workflow_definition_form[related_entity]&amp;#34; with &amp;#34;User&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mais utilisez plutôt des raccourcis:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; And I fill &amp;#34;Workflow Edit Form&amp;#34; with:&#xA;   | Name                  | User Workflow Test |&#xA;   | Related Entity        | User               |&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Que vous définnissez dans le fichier yml :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Elements form</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-elements-form/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-elements-form/</guid>
      <description>&lt;p&gt;Les elements sont le mapping entre des elements du dom utilisé par le test.&#xA;Prenez une minute pour lire la base des &lt;a href=&#34;https://github.com/minkphp/Mink/blob/9ea1cebe3dc529ba3861d87c818f045362c40484/src/Element/NodeElement.php&#34;&gt;NodeElement Mink&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Tous les éléments doivent être décrits dans {BundleName} {BundleName}/Tests/Behat/behat.yml de la manière suivante:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;oro_behat_extension&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;elements&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;Login&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;selector&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#login-form&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;class&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Oro\Bundle\TestFrameworkBundle\Behat\Element\Form&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;options&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#f92672&#34;&gt;mapping&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;Username&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_username&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;Password&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_password&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;Login&lt;/code&gt; est un nom d&amp;rsquo;élément qui DOIT être unique. L&amp;rsquo;élément peut être créé manuellement dans un contexte par OroElementFactory par son nom:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;elementFactory&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Login&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Le &lt;code&gt;selector&lt;/code&gt; définit comment le driver Web doit trouver l&amp;rsquo;élément dans le DOM.&#xA;Par défaut, lorsque le type de sélecteur n&amp;rsquo;est pas spécifié, le type &lt;code&gt;css&lt;/code&gt; est utilisé.&#xA;Le sélecteur XPath est également pris en charge et peut être fourni avec la configuration suivante:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;selector&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;xpath&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;locator&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;//span[id=&amp;#39;mySpan&amp;#39;]/ancestor::form/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;options&lt;/code&gt; est un tableau d&amp;rsquo;options supplémentaires stockées dans la propriété options de la classe Element.&#xA;Il est fortement recommandé de fournir une classe avec des options de mappage pour les éléments de formulaire,&#xA;car cela augmente la vitesse de test et garantit un mappage de champ plus précis.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;mappage-des-champs-de-formulaire&#34;&gt;Mappage des champs de formulaire&lt;/h2&gt;&#xA;&lt;p&gt;Par défaut, les tests utilisent le &lt;a href=&#34;http://mink.behat.org/en/latest/guides/traversing-pages.html#named-selectors&#34;&gt;sélecteur de champ nommé&lt;/a&gt;  pour mapper les champs du formulaire.&#xA;Le sélecteur de nom de champ peut rechercher le champ par son identifiant, son nom, son label ou son placeholder.&#xA;Vous êtes libre d&amp;rsquo;utiliser n&amp;rsquo;importe quel sélecteur pour mapper des champs de formulaire ou encapsuler un élément dans l&amp;rsquo;élément behat particulier.&lt;/p&gt;</description>
    </item>
    <item>
      <title>exemples</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-exemples/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-exemples/</guid>
      <description>&lt;h3 id=&#34;ecrire-une-feature&#34;&gt;Ecrire une feature&lt;/h3&gt;&#xA;&lt;p&gt;Chaque bundle doit contenir ses propres tests behat pour les fonctionnalités du répertoire &lt;code&gt;{BundleName}/Tests/Behat/Features/&lt;/code&gt;.&#xA;Chaque fonctionnalité est un fichier distinct avec l&amp;rsquo;extension &lt;code&gt;.feature&lt;/code&gt; et une syntaxe spécifique.&lt;/p&gt;&#xA;&lt;h4 id=&#34;note-&#34;&gt;Note :&lt;/h4&gt;&#xA;&lt;p&gt;Voir la doc de &lt;a href=&#34;https://cucumber.io/docs/&#34;&gt;Cucumber&lt;/a&gt; pour plus d&amp;rsquo;infos.&lt;/p&gt;&#xA;&lt;p&gt;Une fonctionnalité commence par ce qui suit:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Le mot clé &lt;code&gt;Feature&lt;/code&gt;: et le nom de la fonctionnalité (ceux-ci doivent rester sur la même ligne),&lt;/li&gt;&#xA;&lt;li&gt;Une description facultative (peut être formatée sur plusieurs lignes). Une description significative est fortement recommandée.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Vient ensuite le scénario de fonctionnalité - un exemple spécifique qui illustre une règle métier et se compose d&amp;rsquo;étapes séquentielles.&#xA;En plus d&amp;rsquo;être une spécification de test et une documentation de test, un scénario définit les étapes de test et sert de spécification exécutable du système.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fixtures</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-fixtures/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-fixtures/</guid>
      <description>&lt;h3 id=&#34;feature-fixtures-&#34;&gt;Feature Fixtures :&lt;/h3&gt;&#xA;&lt;p&gt;Chaque fois que behat exécute une nouvelle fonctionnalité, l&amp;rsquo;état de l&amp;rsquo;application est réinitialisé par défaut :&#xA;il n&amp;rsquo;y a qu&amp;rsquo;un seul utilisateur administrateur, une organisation, une unité commerciale et des rôles par défaut dans la base de données.&lt;/p&gt;&#xA;&lt;p&gt;Les tests de fonctionnalités doivent s&amp;rsquo;appuyer sur les données disponibles dans l&amp;rsquo;application après l&amp;rsquo;exécution de la commande oro: install. Dans la plupart des cas, cela ne suffit pas.&lt;/p&gt;&#xA;&lt;p&gt;Ainsi, vous avez deux façons d&amp;rsquo;obtenir plus de données dans le système: en utilisant des fixtures de base ou des fixtures alice.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Isolation</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-isolation/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-isolation/</guid>
      <description>&lt;p&gt;Chaque fonctionnalité peut interagir avec l&amp;rsquo;application et effectuer des opérations CRUD. Par conséquent, la base de données peut être modifiée.&#xA;Pour éviter les collisions de données, les fonctionnalités sont isolées: la base de données et les répertoires de cache sont vidés avant d&amp;rsquo;exécuter les tests de fonctionnalités;&#xA;ils sont restaurés une fois l&amp;rsquo;exécution des tests de fonctionnalités terminée.&lt;/p&gt;&#xA;&lt;p&gt;Chaque isolateur doit implémenter l&amp;rsquo;interface &lt;code&gt;Oro\Bundle\TestFrameworkBundle\Behat\Isolation\IsolatorInterface&lt;/code&gt; et le tag `oro_behat.isolator avec de la priorité.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-symfony/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-symfony/</guid>
      <description>&lt;p&gt;Behat est une application console Symfony avec son propre conteneur et ses propres services.&#xA;Un conteneur Behat peut être configuré via des extensions en utilisant behat.yml à la racine du répertoire d&amp;rsquo;application.&#xA;Le conteneur d&amp;rsquo;application peut être utilisé par le noyau injecté dans votre contexte après avoir implémenté KernelAwareContext et utilisé le trait KernelDictionary.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Behat\Symfony2Extension\Context\KernelAwareContext&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Behat\Symfony2Extension\Context\KernelDictionary&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Oro\Bundle\TestFrameworkBundle\Behat\Context\OroFeatureContext&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;FeatureContext&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OroFeatureContext&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KernelAwareContext&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KernelDictionary&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useContainer&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         $doctrine &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getContainer&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;doctrine&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;De plus, vous pouvez injecter des services dans le contexte behat:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tips</title>
      <link>http://tech.kiboko.fr/oro/test/behat/behat-tips/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>http://tech.kiboko.fr/oro/test/behat/behat-tips/</guid>
      <description>&lt;h2 id=&#34;health-checkers&#34;&gt;Health Checkers&lt;/h2&gt;&#xA;&lt;p&gt;Behat a une possibilité native d&amp;rsquo;invoquer des formateurs sans exécuter les tests et les hooks.&lt;/p&gt;&#xA;&lt;p&gt;Vous pouvez essayer:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;bin/behat --dry-run&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cela peut être utile au cas où vous n&amp;rsquo;êtes pas sûr d&amp;rsquo;avoir déclaré tout le contexte nécessaire à votre fonctionnalité.&#xA;OroBehatExtension améliore cette fonctionnalité et ajoute des fonctionnalités supplémentaires.&lt;/p&gt;&#xA;&lt;h2 id=&#34;erreurs&#34;&gt;Erreurs&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Erreur courante : Couldn’t generate random unique value for OroBundleUserBundleEntityUser: username in 128 tries&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;hot fix:&lt;/p&gt;&#xA;&lt;p&gt;Vérifiez votre fixtures. Supprimez le suffixe (unique) dans la propriété d&amp;rsquo;entité dans le luminaire d&amp;rsquo;entité, comme dans l&amp;rsquo;exemple suivant:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
